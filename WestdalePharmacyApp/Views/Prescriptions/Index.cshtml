@model IEnumerable<WestdalePharmacyApp.Models.Prescription>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


    <table class="table">
        <thead>
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.ImageFile)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreationTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpecialInstruction)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TimesRefill)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RefillAvailable)
                </th>
                <th>
                    Action
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderByDescending(item => item.CreationTime))
            {
                <tr>

                    <td>
                        @{
                            var base64 = Convert.ToBase64String(item.ImageFile);
                            var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                        }
                        <img src='@imgSrc' style="max-width:100px;max-height:100px" />

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreationTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SpecialInstruction)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimesRefill)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RefillAvailable)
                    </td>

                    <td>
                        @{
                            if (item.Status.Equals("Completed") || item.Status.Equals("Refill Requested"))
                            {
                                <a asp-action="Details" asp-route-id="@item.PrescriptionId">Details</a>
                            }
                            else
                            {
                                <a asp-action="Edit" asp-route-id="@item.PrescriptionId">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.PrescriptionId"> Details </a>
                                <a asp-action="Delete" asp-route-id="@item.PrescriptionId"> Delete </a>
                            }
                        }

                    </td>
                    <td>
                        @{
                            if (item.Status.Equals("Completed") && item.RefillAvailable > 0)
                            {
                                <a asp-action="Refill" asp-route-id="@item.PrescriptionId">Request Refill</a>
                            }
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
